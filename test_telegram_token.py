#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ–∫–µ–Ω–∞ Telegram –±–æ—Ç–∞
"""

import os
import sys
import hmac
import hashlib
from urllib.parse import parse_qs, unquote

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app.core.config import settings

def test_telegram_token():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ Telegram –±–æ—Ç–∞"""
    
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ Telegram –±–æ—Ç–∞")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞
    if not settings.TELEGRAM_BOT_TOKEN:
        print("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
        print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤ .env —Ñ–∞–π–ª–µ –∏–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω TELEGRAM_BOT_TOKEN")
        return False
    
    print(f"‚úÖ TELEGRAM_BOT_TOKEN –Ω–∞–π–¥–µ–Ω")
    print(f"üìè –î–ª–∏–Ω–∞ —Ç–æ–∫–µ–Ω–∞: {len(settings.TELEGRAM_BOT_TOKEN)} —Å–∏–º–≤–æ–ª–æ–≤")
    print(f"üîë –ü–µ—Ä–≤—ã–µ 10 —Å–∏–º–≤–æ–ª–æ–≤: {settings.TELEGRAM_BOT_TOKEN[:10]}...")
    print(f"üîë –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å–∏–º–≤–æ–ª–æ–≤: ...{settings.TELEGRAM_BOT_TOKEN[-10:]}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç —Ç–æ–∫–µ–Ω–∞ (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ 1234567890:ABCdefGHIjklMNOpqrsTUVwxyz)
    if ':' not in settings.TELEGRAM_BOT_TOKEN:
        print("‚ö†Ô∏è  –í–Ω–∏–º–∞–Ω–∏–µ: —Ç–æ–∫–µ–Ω –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–≤–æ–µ—Ç–æ—á–∏–µ, –≤–æ–∑–º–æ–∂–Ω–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç")
    else:
        parts = settings.TELEGRAM_BOT_TOKEN.split(':')
        if len(parts) != 2:
            print("‚ö†Ô∏è  –í–Ω–∏–º–∞–Ω–∏–µ: –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ç–æ–∫–µ–Ω–∞ (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 2 —á–∞—Å—Ç–∏ —á–µ—Ä–µ–∑ –¥–≤–æ–µ—Ç–æ—á–∏–µ)")
        else:
            bot_id, bot_token = parts
            print(f"ü§ñ ID –±–æ—Ç–∞: {bot_id}")
            print(f"üîê –¢–æ–∫–µ–Ω –±–æ—Ç–∞: {bot_token[:10]}...")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Å–µ–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞
    try:
        secret_key = hmac.new(
            "WebAppData".encode('utf-8'),
            settings.TELEGRAM_BOT_TOKEN.encode('utf-8'),
            hashlib.sha256
        ).digest()
        
        print(f"‚úÖ –°–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        print(f"üîë –°–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á (hex): {secret_key.hex()}")
        print(f"üîë –°–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á (–ø–µ—Ä–≤—ã–µ 16 –±–∞–π—Ç): {secret_key[:16].hex()}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–µ–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞: {e}")
        return False
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ –ª–æ–≥–æ–≤
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ –ª–æ–≥–æ–≤")
    print("=" * 50)
    
    # –î–∞–Ω–Ω—ã–µ –∏–∑ –ª–æ–≥–æ–≤
    test_init_data = "user=%7B%22id%22%3A5583588138%2C%22first_name%22%3A%22Senoro%22%2C%22last_name%22%3A%22Pomodoro%22%2C%22username%22%3A%22senoropomodoro%22%2C%22language_code%22%3A%22ru%22%2C%22allows_write_to_pm%22%3Atrue%2C%22photo_url%22%3A%22https%3A%5C%2F%5C%2Ft.me%5C%2Fi%5C%2Fuserpic%5C%2F320%5C%2F8IDMs2EzSGrsZcnWwXho31zG22pwaa7YeQj2e_sd81YWRyFZGdFAiODkBSVsxiZH.svg%22%7D&chat_instance=4655770683956331623&chat_type=private&auth_date=1751313796&signature=26pfzpu5xMkR8LJ7xDl9zeAlj-TLoksxAEmPl-mJLdziOAhFs2kKdLTaN62B_pQ7ibDHk3YIgPtdzWNhoeCdAQ&hash=90fdb9585451090036b8c4effbb3c02eb6316f5c04f12775510c51f6a9e3a89c"
    
    print(f"üìä –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ: {test_init_data}")
    
    try:
        # –î–µ–∫–æ–¥–∏—Ä—É–µ–º URL-encoded —Å—Ç—Ä–æ–∫—É
        decoded_data = unquote(test_init_data)
        print(f"üìä –î–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: {decoded_data}")
        
        # –ü–∞—Ä—Å–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        params = parse_qs(decoded_data)
        print(f"üìä –ü–∞—Ä—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã: {params}")
        
        # –°–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏
        data_dict = {}
        for key, values in params.items():
            if values:
                data_dict[key] = values[0]
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º hash
        received_hash = data_dict.pop('hash', '') or ''
        print(f"üìä –ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–π hash: {received_hash}")
        print(f"üìä –î–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏: {data_dict}")
        
        # –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä–æ–∫—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        fields_to_exclude = ['hash', 'signature']
        data_check_string = '\n'.join([
            f"{k}={v}" for k, v in sorted(data_dict.items())
            if k not in fields_to_exclude
        ])
        
        print(f"üìä –°—Ç—Ä–æ–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏: {data_check_string}")
        print(f"üìä –ë–∞–π—Ç—ã —Å—Ç—Ä–æ–∫–∏: {data_check_string.encode('utf-8')}")
        
        # –í—ã—á–∏—Å–ª—è–µ–º hash
        computed_hash = hmac.new(
            secret_key,
            data_check_string.encode('utf-8'),
            hashlib.sha256
        ).hexdigest()
        
        print(f"üìä –í—ã—á–∏—Å–ª–µ–Ω–Ω—ã–π hash: {computed_hash}")
        print(f"üìä –ü–æ–ª—É—á–µ–Ω–Ω—ã–π hash: {received_hash}")
        print(f"üìä –•–µ—à–∏ —Å–æ–≤–ø–∞–¥–∞—é—Ç: {computed_hash == received_hash}")
        
        if computed_hash == received_hash:
            print("‚úÖ –¢–µ—Å—Ç –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ!")
            return True
        else:
            print("‚ùå –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ—à–µ–ª - —Ö–µ—à–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç")
            print("üí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
            print("   - –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω –±–æ—Ç–∞")
            print("   - –î–∞–Ω–Ω—ã–µ –±—ã–ª–∏ –∏–∑–º–µ–Ω–µ–Ω—ã")
            print("   - –ü—Ä–æ–±–ª–µ–º–∞ —Å –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        print(f"üìÑ –ü–æ–ª–Ω—ã–π traceback: {traceback.format_exc()}")
        return False

if __name__ == "__main__":
    success = test_telegram_token()
    if success:
        print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("\n‚ùå –¢–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.")
        sys.exit(1) 