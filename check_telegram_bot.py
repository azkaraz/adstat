#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ Telegram –±–æ—Ç–∞
"""

import os
import sys
import requests
import json

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app.core.config import settings

def check_telegram_bot():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ Telegram –±–æ—Ç–∞"""
    
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ Telegram –±–æ—Ç–∞")
    print("=" * 50)
    
    if not settings.TELEGRAM_BOT_TOKEN:
        print("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
        return False
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –±–æ—Ç–∞ –∏–∑ —Ç–æ–∫–µ–Ω–∞
    bot_id = settings.TELEGRAM_BOT_TOKEN.split(':')[0]
    print(f"ü§ñ ID –±–æ—Ç–∞: {bot_id}")
    print(f"üîë –¢–æ–∫–µ–Ω: {settings.TELEGRAM_BOT_TOKEN[:10]}...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–æ—Ç–∞ —á–µ—Ä–µ–∑ Telegram API
    try:
        url = f"https://api.telegram.org/bot{settings.TELEGRAM_BOT_TOKEN}/getMe"
        response = requests.get(url, timeout=10)
        
        if response.status_code == 200:
            data = response.json()
            if data.get('ok'):
                bot_info = data['result']
                print("‚úÖ –ë–æ—Ç –Ω–∞–π–¥–µ–Ω –∏ –∞–∫—Ç–∏–≤–µ–Ω!")
                print(f"üìù –ò–º—è: {bot_info.get('first_name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}")
                print(f"üë§ Username: @{bot_info.get('username', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}")
                print(f"üÜî ID: {bot_info.get('id', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}")
                print(f"üîó Can join groups: {bot_info.get('can_join_groups', False)}")
                print(f"üì± Can read all group messages: {bot_info.get('can_read_all_group_messages', False)}")
                print(f"ü§ñ Supports inline queries: {bot_info.get('supports_inline_queries', False)}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –±–æ—Ç–∞ Mini Apps
                print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Mini Apps...")
                check_mini_apps(settings.TELEGRAM_BOT_TOKEN)
                
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ API: {data.get('description', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
                return False
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            print(f"üìÑ –û—Ç–≤–µ—Ç: {response.text}")
            return False
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏: {e}")
        return False
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False

def check_mini_apps(bot_token):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ Mini Apps –±–æ—Ç–∞"""
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ (–≤–∫–ª—é—á–∞—è Mini Apps)
        url = f"https://api.telegram.org/bot{bot_token}/getMyDefaultAdministratorRights"
        response = requests.get(url, timeout=10)
        
        if response.status_code == 200:
            data = response.json()
            print(f"üìä –û—Ç–≤–µ—Ç API: {json.dumps(data, indent=2, ensure_ascii=False)}")
        
        # –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–∞–Ω–¥–∞—Ö
        url = f"https://api.telegram.org/bot{bot_token}/getMyCommands"
        response = requests.get(url, timeout=10)
        
        if response.status_code == 200:
            data = response.json()
            if data.get('ok') and data['result']:
                print("üìã –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:")
                for cmd in data['result']:
                    print(f"   /{cmd['command']} - {cmd['description']}")
            else:
                print("üìã –ö–æ–º–∞–Ω–¥—ã –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
        
        # –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–µ–Ω—é
        url = f"https://api.telegram.org/bot{bot_token}/getChatMenuButton"
        response = requests.get(url, timeout=10)
        
        if response.status_code == 200:
            data = response.json()
            if data.get('ok') and data['result']:
                menu = data['result']
                print(f"üçî –ú–µ–Ω—é –±–æ—Ç–∞: {menu.get('type', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
                if menu.get('text'):
                    print(f"üìù –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏: {menu['text']}")
                if menu.get('web_app'):
                    web_app = menu['web_app']
                    print(f"üåê WebApp URL: {web_app.get('url', '–ù–µ —É–∫–∞–∑–∞–Ω')}")
        
    except Exception as e:
        print(f"‚ö†Ô∏è  –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ Mini Apps: {e}")

def test_webhook():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ webhook"""
    
    print("\nüîó –ü—Ä–æ–≤–µ—Ä–∫–∞ webhook...")
    
    try:
        url = f"https://api.telegram.org/bot{settings.TELEGRAM_BOT_TOKEN}/getWebhookInfo"
        response = requests.get(url, timeout=10)
        
        if response.status_code == 200:
            data = response.json()
            if data.get('ok'):
                webhook_info = data['result']
                print(f"üì° Webhook URL: {webhook_info.get('url', '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω')}")
                print(f"üîí SSL: {webhook_info.get('has_custom_certificate', False)}")
                print(f"üìä –û–∂–∏–¥–∞—é—â–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {webhook_info.get('pending_update_count', 0)}")
                print(f"‚è∞ –ü–æ—Å–ª–µ–¥–Ω—è—è –æ—à–∏–±–∫–∞: {webhook_info.get('last_error_date', '–ù–µ—Ç')}")
                print(f"‚ùå –ü–æ—Å–ª–µ–¥–Ω—è—è –æ—à–∏–±–∫–∞: {webhook_info.get('last_error_message', '–ù–µ—Ç')}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ API: {data.get('description', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            
    except Exception as e:
        print(f"‚ö†Ô∏è  –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ webhook: {e}")

def create_test_webapp_button():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –∫–Ω–æ–ø–∫–∏ WebApp"""
    
    print("\nüîß –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –∫–Ω–æ–ø–∫–∏ WebApp...")
    
    try:
        # –°–æ–∑–¥–∞–µ–º inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å WebApp –∫–Ω–æ–ø–∫–æ–π
        keyboard = {
            "inline_keyboard": [
                [
                    {
                        "text": "üìä –û—Ç–∫—Ä—ã—Ç—å Ads Statistics",
                        "web_app": {
                            "url": "https://azkaraz.github.io/adstat/"
                        }
                    }
                ]
            ]
        }
        
        print(f"‚å®Ô∏è  –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞: {json.dumps(keyboard, indent=2, ensure_ascii=False)}")
        print("üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç—É –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤ –∫–æ–º–∞–Ω–¥–µ /start –≤–∞—à–µ–≥–æ –±–æ—Ç–∞")
        
    except Exception as e:
        print(f"‚ö†Ô∏è  –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–Ω–æ–ø–∫–∏: {e}")

if __name__ == "__main__":
    success = check_telegram_bot()
    
    if success:
        test_webhook()
        create_test_webapp_button()
        
        print("\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        print("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
        print("1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Mini App —Å–æ–∑–¥–∞–Ω –≤ BotFather")
        print("2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ URL –≤ Mini App –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π")
        print("3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–æ—Ç –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∞ –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ Mini Apps")
        print("4. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å Mini App –≤ BotFather")
    else:
        print("\n‚ùå –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ –ø—Ä–æ—à–ª–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞.")
        sys.exit(1) 