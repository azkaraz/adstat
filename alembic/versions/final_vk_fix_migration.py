"""final vk fix migration

Revision ID: final_vk_fix_migration
Revises: fix_vk_fields_migration
Create Date: 2024-12-19 10:35:00.000000

"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = 'final_vk_fix_migration'
down_revision = 'fix_vk_fields_migration'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Проверяем текущее состояние таблицы
    connection = op.get_bind()
    inspector = sa.inspect(connection)
    existing_columns = [col['name'] for col in inspector.get_columns('users')]
    
    print(f"Existing columns: {existing_columns}")
    
    # Добавляем только те колонки, которых точно нет
    columns_to_add = {
        'vk_id': sa.Column('vk_id', sa.String(), nullable=True),
        'has_vk_account': sa.Column('has_vk_account', sa.Boolean(), nullable=True, server_default='false'),
        'has_google_account': sa.Column('has_google_account', sa.Boolean(), nullable=True, server_default='false'),
        'has_google_sheet': sa.Column('has_google_sheet', sa.Boolean(), nullable=True, server_default='false')
    }
    
    for column_name, column_def in columns_to_add.items():
        if column_name not in existing_columns:
            print(f"Adding column: {column_name}")
            op.add_column('users', column_def)
            if column_name == 'vk_id':
                op.create_index(op.f('ix_users_vk_id'), 'users', ['vk_id'], unique=True)
        else:
            print(f"Column {column_name} already exists, skipping")
    
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Удаляем добавленные колонки
    connection = op.get_bind()
    inspector = sa.inspect(connection)
    existing_columns = [col['name'] for col in inspector.get_columns('users')]
    
    if 'has_google_sheet' in existing_columns:
        op.drop_column('users', 'has_google_sheet')
    
    if 'has_google_account' in existing_columns:
        op.drop_column('users', 'has_google_account')
    
    if 'has_vk_account' in existing_columns:
        op.drop_column('users', 'has_vk_account')
    
    if 'vk_id' in existing_columns:
        op.drop_index(op.f('ix_users_vk_id'), table_name='users')
        op.drop_column('users', 'vk_id')
    
    # ### end Alembic commands ### 